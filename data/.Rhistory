install.packages("styler")
install.packages("addinslist")
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
addinslist:::addinslistAddin()
styler:::style_active_file()
styler:::style_active_file()
lrn2014 <- read.table(
"http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt",
sep = "\t", header = TRUE
)
dim(lrn2014)
str(lrn2014)
source('~/Workspace/hy/open-data-science/IODS-project/data/create_learning2014.R')
source('~/Workspace/hy/open-data-science/IODS-project/data/create_learning2014.R')
str(lrn2014)
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
# Create an analysis dataset with the variables gender, age, attitude, deep,
# stra, surf and points by combining questions in the learning2014 data,
# as defined in the datacamp exercises and also on the bottom part of the
# following page (only the top part of the page is in Finnish).
# http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS2-meta.txt.
# Scale all combination variables to the original scales (by taking the mean).
# Exclude observations where the exam points variable is zero.
# (The data should then have 166 observations and 7 variables)
deep_questions <- c(
"D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30", "D06", "D15", "D23", "D31"
)
surface_questions <- c(
"SU02", "SU10", "SU18", "SU26", "SU05", "SU13", "SU21", "SU29", "SU08", "SU16", "SU24", "SU32"
)
strategic_questions <- c(
"ST01", "ST09", "ST17", "ST25", "ST04", "ST12", "ST20", "ST28"
)
# Create an analysis dataset with the variables gender, age, attitude, deep,
# stra, surf and points by combining questions in the learning2014 data,
# as defined in the datacamp exercises and also on the bottom part of the
# following page (only the top part of the page is in Finnish).
# http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS2-meta.txt.
# Scale all combination variables to the original scales (by taking the mean).
# Exclude observations where the exam points variable is zero.
# (The data should then have 166 observations and 7 variables)
library("dplyr")
# Create an analysis dataset with the variables gender, age, attitude, deep,
# stra, surf and points by combining questions in the learning2014 data,
# as defined in the datacamp exercises and also on the bottom part of the
# following page (only the top part of the page is in Finnish).
# http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS2-meta.txt.
# Scale all combination variables to the original scales (by taking the mean).
# Exclude observations where the exam points variable is zero.
# (The data should then have 166 observations and 7 variables)
install.packages("dplyr")
# Create an analysis dataset with the variables gender, age, attitude, deep,
# stra, surf and points by combining questions in the learning2014 data,
# as defined in the datacamp exercises and also on the bottom part of the
# following page (only the top part of the page is in Finnish).
# http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS2-meta.txt.
# Scale all combination variables to the original scales (by taking the mean).
# Exclude observations where the exam points variable is zero.
# (The data should then have 166 observations and 7 variables)
library(dplyr)
#gender, age attitude, deep, stra, surf and points
deep <- rowMeans(select(lrn2014, one_of(deep_questions)))
surf <- rowMeans(select(lrn2014, one_of(surface_questions)))
stra <- rowMeans(select(lrn2014, one_of(strategic_questions)))
names(lrn2014)
#gender, age attitude, deep, stra, surf and points
keep_columns <- c("gender", "Age", "Attitude", "Points")
learning2014 <- select(lrn2014, one_of(keep_columns))
learning2014
str(learning2014)
colnames(learning2014)[2] <- "age"
colnames(learning2014)[3] <- "attitude"
colnames(learning2014)[4] <- "points"
str(learning2014)
rm(deep)
rm(stra)
rm(surf)
learning2014$deep <- rowMeans(select(lrn2014, one_of(deep_questions)))
learning2014$surf <- rowMeans(select(lrn2014, one_of(surface_questions)))
learning2014$stra <- rowMeans(select(lrn2014, one_of(strategic_questions)))
str(learning2014)
learning2014 <- select(learning2014, points > 0)
learning2014$points
learning2014 <- filter(learning2014, points > 0)
str(learning2014)
setwd("~/Workspace/hy/open-data-science/IODS-project")
setwd("~/Workspace/hy/open-data-science/IODS-project/data")
# 4. Write csv data to file and read it back in
write.csv(learning2014, file = "learning2014.csv", sep = "\t")
styler:::style_active_file()
styler:::style_active_file()
learning2014_again <- read.table("learning2014.csv", sep = "\t", header = TRUE)
# 4. Write csv data to file and read it back in
write.csv(learning2014, file = "learning2014.txt", sep = "\t")
learning2014_again <- read.table("learning2014.txt", sep = "\t", header = TRUE)
# 4. Write csv data to file and read it back in
write.table(learning2014, file = "learning2014.txt", sep = "\t")
learning2014_again <- read.table("learning2014.txt", sep = "\t", header = TRUE)
head(learning2014_again)
str(learning2014_again)
styler:::style_active_file()
styler:::style_active_file()
learning2014_again_2 <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/learning2014.txt", sep = "\t", header = TRUE)
learning2014_again_2 <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/learning2014.txt", sep = ",", header = TRUE)
learning2014$attitude <- learning2014$attitude / 10
# 4. Write csv data to file and read it back in
write.table(learning2014, file = "learning2014.txt", sep = "\t")
learning2014_again <- read.table("learning2014.txt", sep = "\t", header = TRUE)
head(learning2014_again)
str(learning2014_again)
knitr::opts_chunk$set(echo = TRUE)
learning2014 <- read.table("data/learning2014.txt", sep = "\t", header = TRUE)
dim(learning2014)
str(learning2014)
dim(learning2014)
str(learning2014)
str(learning2014)
dim(learning2014)
str(learning2014)
dim(learning2014)
summary(learning2014)
install.packages("GGally")
install.packages("ggplot2")
library(GGally)
ggpairs(learning2014, mapping = aes(col=gender, alpha=0.3), lower = list(combo = wrap("facethist", bins = 20)))
library(GGally)
library(ggplot2)
ggpairs(learning2014, mapping = aes(col=gender, alpha=0.3), lower = list(combo = wrap("facethist", bins = 20)))
summary(learning2014)
lm_model <- lm(points ~ attitude + surf + stra, data = learning2014)
summary(lm_model)
lm_model_2 <- lm(points ~ attitude, data = learning2014)
summary(lm_model_2)
plot(lm_model_2, which = c(1,2,5))
par(mfrow = c(2,2))
plot(lm_model_2, which = c(1,2,5))
par(mfrow = c(2,2))
par(mfrow = c(2,2))
plot(lm_model_2, which = c(1,2,5))
